{"version":3,"sources":["pages/sidebar.js","pages/rightClickMenu.js","pages/folderName.js","pages/mainbar.js","pages/navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","folderStructure","selectedLocation","setLocation","locationArr","split","sideBarSelection","parseInt","className","childFolders","map","folder","index","style","background","onClick","toString","paddingRight","icon","name","RightClickMenu","xCoordinate","yCoordinate","setFolderStructure","selectedFolder","setRenameModeOn","childFolderIndex","length","updatedFolderStructure","targetFolder","folderIndex","position","left","top","push","splice","FolderName","renameModeOn","rename","e","console","log","target","value","type","defaultValue","onBlur","onKeyDown","key","handleKeyDown","Mainbar","useState","isOpen","x","y","menuState","setMenuState","onRightClick","folderLocation","preventDefault","stopPropagation","clientX","clientY","onContextMenu","onDoubleClick","openFolder","size","color","isOn","NavBar","paddingLeft","join","App","location","setState","state","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAsBeA,EApBC,SAACC,GACb,IAAOC,EAAkDD,EAAlDC,gBAAiBC,EAAiCF,EAAjCE,iBAAkBC,EAAeH,EAAfG,YACpCC,EAAcF,EAAiBG,MAAM,KACrCC,EAAmBC,SAASH,EAAY,IAE9C,OACI,sBAAKI,UAAU,OAAf,UACI,mBAAGA,UAAU,UAAb,wBACCP,EAAgBQ,aAAaC,KAAI,SAACC,EAAOC,GACtC,OACI,sBAAKJ,UAAU,kBAAkBK,MAAOD,IAAQN,EAAmB,CAACQ,WAAW,WAAa,GAAIC,QAAS,kBAAMZ,EAAYS,EAAMI,aAAjI,UACI,sBAAMH,MAAO,CAACI,aAAc,OAA5B,SAAqCN,EAAOO,OAC3CP,EAAOQ,e,qBC+BjBC,EA7CQ,SAACpB,GACpB,IAAOqB,EAAoHrB,EAApHqB,YAAaC,EAAuGtB,EAAvGsB,YAAarB,EAA0FD,EAA1FC,gBAAiBC,EAAyEF,EAAzEE,iBAAkBqB,EAAuDvB,EAAvDuB,mBAAoBC,EAAmCxB,EAAnCwB,eAAgBC,EAAmBzB,EAAnByB,gBAClGrB,EAAcF,EAAiBG,MAAM,KACrCqB,EAAmBF,GAAkBjB,SAASiB,EAAenB,MAAM,KAAKD,EAAYuB,SACtFC,EAAsB,eAAO3B,GAC7B4B,EAAeD,EACnBxB,EAAYM,KAAI,SAAAoB,GACZD,EAAeA,EAAapB,aAAaF,SAASuB,OAwBtD,OACI,sBAAKtB,UAAU,OAAOK,MAAO,CAACkB,SAAU,WAAYC,KAAMX,EAAaY,IAAKX,GAA5E,UACI,qBAAKd,UAAU,OAAOO,QAAS,WAtBnCc,EAAapB,aAAayB,KAAK,CAC3Bf,KAAM,aACNV,aAAc,KAElBc,EAAmBK,IAkBf,wBACCJ,GACG,gCACI,qBAAKhB,UAAU,OAAOO,QAAS,WAjB3Cc,EAAapB,aAAa0B,OAAOT,EAAiB,GAClDH,EAAmBK,IAgBP,oBACA,qBAAKpB,UAAU,OAAOO,QAAS,WAb3Cc,EAAapB,aAAayB,KAAK,CAC3Bf,KAAK,GAAD,OAAKU,EAAapB,aAAaiB,GAAkBP,KAAjD,SACJV,aAAc,KAElBc,EAAmBK,IASP,uBACA,qBAAKpB,UAAU,OAAOO,QAAS,kBAAIU,EAAgBC,IAAnD,2BCDLU,EArCI,SAACpC,GAChB,IAAOqC,EAAqGrC,EAArGqC,aAAclB,EAAuFnB,EAAvFmB,KAAMlB,EAAiFD,EAAjFC,gBAAiBsB,EAAgEvB,EAAhEuB,mBAAoBrB,EAA4CF,EAA5CE,iBAAkBU,EAA0BZ,EAA1BY,MAAOa,EAAmBzB,EAAnByB,gBAEnFa,EAAS,SAACC,GACZ,IAAMnC,EAAcF,EAAiBG,MAAM,KACvCuB,EAAsB,eAAO3B,GAC7B4B,EAAeD,EACnBxB,EAAYM,KAAI,SAAAoB,GACZD,EAAeA,EAAapB,aAAaF,SAASuB,OAEtDU,QAAQC,IAAIF,GACZV,EAAapB,aAAaG,GAAOO,KAAOoB,EAAEG,OAAOC,MACjDpB,EAAmBK,GACnBH,GAAiB,IASrB,OACI,gCACKY,IAAezB,GACZ,uBACIgC,KAAK,OACLC,aAAc1B,EACd2B,OAAQ,SAACP,GAAKD,EAAOC,IACrBQ,UAAW,SAACR,IAbN,SAACA,GACN,UAAVA,EAAES,KACDV,EAAOC,GAWkBU,CAAcV,MAGtCF,IAAezB,GAASO,MCetB+B,EA1CC,SAAClD,GACb,IAAOC,EAAsED,EAAtEC,gBAAiBC,EAAqDF,EAArDE,iBAAkBqB,EAAmCvB,EAAnCuB,mBAAoBpB,EAAeH,EAAfG,YAC9D,EAAkCgD,mBAAS,CAACC,QAAQ,EAAOC,EAAG,EAAGC,EAAG,EAAG9B,eAAgB,OAAvF,mBAAO+B,EAAP,KAAkBC,EAAlB,KACA,EAAwCL,oBAAU,GAAlD,mBAAOd,EAAP,KAAqBZ,EAArB,KACMrB,EAAcF,EAAiBG,MAAM,KACvCwB,EAAe5B,EACnBG,EAAYM,KAAI,SAAAoB,GACZD,EAAeA,EAAapB,aAAaF,SAASuB,OAGtD,IAAM2B,EAAe,SAAClB,EAAGmB,GACrBnB,EAAEoB,iBACFpB,EAAEqB,kBACFJ,EAAa,CACTJ,QAAQ,EACRC,EAAGd,EAAEsB,QACLP,EAAGf,EAAEuB,QACLtC,eAAgBkC,KAUxB,OACI,sBAAKlD,UAAU,OAAOuD,cAAe,SAACxB,GAAD,OAAKkB,EAAalB,IAAIxB,QAAS,kBAAMyC,EAAa,CAACJ,QAAQ,EAAOC,EAAE,EAAGC,EAAE,KAA9G,UACKzB,EAAapB,aAAaC,KAAI,SAACC,EAAOC,GACnC,OACI,sBAAKJ,UAAU,UAAUuD,cAAe,SAACxB,GAAD,OAAKkB,EAAalB,EAAD,UAAOrC,EAAP,YAA2BU,KAAUoD,cAAe,SAACzB,IAV3G,SAACA,EAAG3B,GACnB2B,EAAEoB,iBACFpB,EAAEqB,kBACFzD,EAAY,GAAD,OAAID,EAAJ,YAAwBU,IAO4FqD,CAAW1B,EAAG3B,IAAjI,UACI,cAAC,IAAD,CAAcsD,KAAK,OAAOC,MAAM,YAChC,cAAC,EAAD,CAAY9B,aAAcA,EAAclB,KAAMR,EAAOQ,KAAMlB,gBAAiBA,EAAiBsB,mBAAoBA,EAAoBrB,iBAAkBA,EAAkBU,MAAOA,EAAOa,gBAAiB,SAAC2C,GAAQ3C,EAAgB2C,YAI5Ob,EAAUH,QAAU,cAAC,EAAD,CAAgB/B,YAAakC,EAAUF,EAAG/B,YAAaiC,EAAUD,EAAG9B,eAAgB+B,EAAU/B,eAAgBD,mBAAoBA,EAAoBtB,gBAAiBA,EAAiBC,iBAAkBA,EAAkBuB,gBAAiB,SAAC2C,GAAQ3C,EAAgB2C,U,gCCHxRC,EArCA,SAACrE,GACZ,IAAOC,EAAuDD,EAAvDC,gBAAgBsB,EAAuCvB,EAAvCuB,mBACjBnB,EADwDJ,EAApBE,iBACLG,MAAM,KACvCuB,EAAsB,eAAO3B,GAC7B4B,EAAeD,EACnBxB,EAAYM,KAAI,SAAAoB,GACZD,EAAeA,EAAapB,aAAaF,SAASuB,OAkBtD,OACI,qBAAKtB,UAAU,SAAf,SACI,sBAAKA,UAAU,MAAf,UACI,mBAAGK,MAAO,CAACsD,MAAM,QAASG,YAAY,QAAtC,qBACA,cAAC,IAAD,CAAqB9D,UAAU,aAAaO,QAnBnC,WACjB,IAAOb,EAAiCF,EAAjCE,iBAAkBC,EAAeH,EAAfG,YACrBC,EAAcF,EAAiBG,MAAM,KACtCD,EAAYuB,OAAO,IAClBvB,EAAY+B,OAAO/B,EAAYuB,OAAO,EAAE,GACxCxB,EAAYC,EAAYmE,KAAK,UAezB,mBAAG1D,MAAO,CAACsD,MAAM,SAAjB,kBACA,cAAC,IAAD,CAAcD,KAAK,OAAO1D,UAAU,aAAaO,QAbrC,WACpBc,EAAapB,aAAayB,KAAK,CAC3Bf,KAAM,aACNV,aAAc,KAElBc,EAAmBK,MASX,cAAC,IAAD,CAAUpB,UAAU,qBCgErBgE,E,kDArFb,WAAYxE,GAAO,IAAD,8BAChB,cAAMA,IA0DRG,YAAc,SAACsE,GACb,EAAKC,SAAS,CACZxE,iBAAkBuE,KA7DJ,EAiElBlD,mBAAqB,SAACK,GACpB,EAAK8C,SAAS,CACZzE,gBAAiB2B,KAjEnB,EAAK+C,MAAM,CACT1E,gBAAgB,CAChBQ,aAAa,CACX,CACEU,KAAM,WACND,KAAM,cAAC,IAAD,IACNT,aAAa,CACX,CACEU,KAAM,UACNV,aAAc,CACZ,CACEU,KAAM,gBACNV,aAAc,MAIpB,CACEU,KAAM,UACNV,aAAc,MAIpB,CACEU,KAAM,UACND,KAAM,cAAC,IAAD,IACNT,aAAa,IAEf,CACEU,KAAM,eACND,KAAM,cAAC,IAAD,IACNT,aAAa,IAEf,CACEU,KAAM,YACND,KAAM,cAAC,IAAD,IACNT,aAAa,IAEf,CACEU,KAAM,UACND,KAAM,cAAC,IAAD,IACNT,aAAa,IAEf,CACEU,KAAM,QACND,KAAM,cAAC,IAAD,IACNT,aAAa,IAEf,CACEU,KAAM,SACND,KAAM,cAAC,IAAD,IACNT,aAAa,MAGjBP,iBAAiB,KAvDH,E,0CAuElB,WAAS,IAAD,OACN,EAA4C0E,KAAKD,MAA1C1E,EAAP,EAAOA,gBAAiBC,EAAxB,EAAwBA,iBACxB,OACE,sBAAKM,UAAU,YAAf,UACE,cAAC,EAAD,CAAQL,YAAa,SAACsE,GAAY,EAAKtE,YAAYsE,IAAYvE,iBAAkBA,EAAkBD,gBAAiBA,EAAiBsB,mBAAoB,SAACtB,GAAmB,EAAKsB,mBAAmBtB,MACrM,sBAAKO,UAAU,MAAf,UACE,cAAC,EAAD,CAASN,iBAAkBA,EAAkBD,gBAAiBA,EAAiBE,YAAa,SAACsE,GAAY,EAAKtE,YAAYsE,MAC1H,cAAC,EAAD,CAASvE,iBAAkBA,EAAkBD,gBAAiBA,EAAiBsB,mBAAoB,SAACtB,GAAmB,EAAKsB,mBAAmBtB,IAAmBE,YAAa,SAACsE,GAAY,EAAKtE,YAAYsE,gB,GA/ErMI,aCCHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2d499d46.chunk.js","sourcesContent":["import { DiDropBox } from \"react-icons/di\";\n\nconst Sidebar = (props) => {\n    const {folderStructure, selectedLocation, setLocation} = props;\n    const locationArr = selectedLocation.split('$');\n    const sideBarSelection = parseInt(locationArr[0]);\n\n    return(\n        <div className=\"side\">\n            <p className=\"heading\">Favourites</p>\n            {folderStructure.childFolders.map((folder,index) => {\n                return(\n                    <div className=\"sidebar-options\" style={index===sideBarSelection ? {background:'#9ea19e'} : {}} onClick={() => setLocation(index.toString())}>\n                        <span style={{paddingRight: \"5px\"}}>{folder.icon}</span>\n                        {folder.name}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default Sidebar","const RightClickMenu = (props) => {\n    const {xCoordinate, yCoordinate, folderStructure, selectedLocation, setFolderStructure, selectedFolder, setRenameModeOn} = props;\n    const locationArr = selectedLocation.split('$');\n    const childFolderIndex = selectedFolder && parseInt(selectedFolder.split('$')[locationArr.length]);\n    let updatedFolderStructure = {...folderStructure};\n    let targetFolder = updatedFolderStructure;\n    locationArr.map(folderIndex => {\n        targetFolder = targetFolder.childFolders[parseInt(folderIndex)];\n    });\n\n    const createNewFolder = () => {\n        targetFolder.childFolders.push({\n            name: 'New Folder',\n            childFolders: []\n        });\n        setFolderStructure(updatedFolderStructure);\n    }\n\n    const deleteFolder = () => {\n        targetFolder.childFolders.splice(childFolderIndex,1);\n        setFolderStructure(updatedFolderStructure);\n    }\n\n    const copyFolder = () => {\n        targetFolder.childFolders.push({\n            name: `${targetFolder.childFolders[childFolderIndex].name}-copy`,\n            childFolders: []\n        });\n        setFolderStructure(updatedFolderStructure);\n    }\n\n    return(\n        <div className=\"menu\" style={{position: 'absolute', left: xCoordinate, top: yCoordinate}}>\n            <div className=\"item\" onClick={()=>{createNewFolder()}}>New Folder</div>\n            {selectedFolder && (\n                <div>\n                    <div className=\"item\" onClick={()=>{deleteFolder()}}>Delete</div>\n                    <div className=\"item\" onClick={()=>{copyFolder()}}>Duplicate</div>\n                    <div className=\"item\" onClick={()=>setRenameModeOn(childFolderIndex)}>Rename</div>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default RightClickMenu;","const FolderName = (props) => {\n    const {renameModeOn, name, folderStructure, setFolderStructure, selectedLocation, index, setRenameModeOn} = props;\n    \n    const rename = (e) => {\n        const locationArr = selectedLocation.split('$');\n        let updatedFolderStructure = {...folderStructure};\n        let targetFolder = updatedFolderStructure;\n        locationArr.map(folderIndex => {\n            targetFolder = targetFolder.childFolders[parseInt(folderIndex)];\n        });\n        console.log(e);\n        targetFolder.childFolders[index].name = e.target.value;\n        setFolderStructure(updatedFolderStructure);\n        setRenameModeOn(-1);\n    }\n\n    const handleKeyDown = (e) => {\n        if(e.key === 'Enter'){\n            rename(e);\n        }\n    }\n\n    return(\n        <div>\n            {renameModeOn===index && (\n                <input\n                    type='text'\n                    defaultValue={name}\n                    onBlur={(e)=>{rename(e)}}\n                    onKeyDown={(e)=>{handleKeyDown(e)}}\n                />\n            )}\n            {renameModeOn!==index && name}\n        </div>\n    )\n}\n\nexport default FolderName;","import { BsFolderFill } from \"react-icons/bs\";\nimport { useState } from \"react\";\nimport RightClickMenu from \"./rightClickMenu\";\nimport FolderName from \"./folderName\";\n\nconst Mainbar = (props) => {\n    const {folderStructure, selectedLocation, setFolderStructure, setLocation} = props;\n    const [menuState, setMenuState] = useState({isOpen: false, x: 0, y: 0, selectedFolder: null});\n    const [renameModeOn, setRenameModeOn] = useState(-1);\n    const locationArr = selectedLocation.split('$');\n    let targetFolder = folderStructure;\n    locationArr.map(folderIndex => {\n        targetFolder = targetFolder.childFolders[parseInt(folderIndex)];\n    });\n\n    const onRightClick = (e, folderLocation) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setMenuState({\n            isOpen: true,\n            x: e.clientX,\n            y: e.clientY,\n            selectedFolder: folderLocation\n        });\n    }\n\n    const openFolder = (e, index) => {\n        e.preventDefault();\n        e.stopPropagation();\n        setLocation(`${selectedLocation}$${index}`);\n    }\n\n    return(\n        <div className=\"main\" onContextMenu={(e)=>onRightClick(e)} onClick={() => setMenuState({isOpen: false, x:0, y:0})}>\n            {targetFolder.childFolders.map((folder,index) => {\n                return(\n                    <div className=\"folders\" onContextMenu={(e)=>onRightClick(e, `${selectedLocation}$${index}`)} onDoubleClick={(e)=>{openFolder(e, index)}}>\n                        <BsFolderFill size='50px' color='skyblue'></BsFolderFill>\n                        <FolderName renameModeOn={renameModeOn} name={folder.name} folderStructure={folderStructure} setFolderStructure={setFolderStructure} selectedLocation={selectedLocation} index={index} setRenameModeOn={(isOn)=>{setRenameModeOn(isOn)}}/>\n                    </div>\n                )\n            })}\n            {menuState.isOpen && <RightClickMenu xCoordinate={menuState.x} yCoordinate={menuState.y} selectedFolder={menuState.selectedFolder} setFolderStructure={setFolderStructure} folderStructure={folderStructure} selectedLocation={selectedLocation} setRenameModeOn={(isOn)=>{setRenameModeOn(isOn)}}/>}\n        </div>\n    )\n}\n\nexport default Mainbar","import { BsFillCaretLeftFill, BsFolderPlus, BsSearch } from \"react-icons/bs\";\n\nconst NavBar = (props) => {\n    const {folderStructure,setFolderStructure,selectedLocation} = props;\n    const locationArr = selectedLocation.split('$');\n    let updatedFolderStructure = {...folderStructure};\n    let targetFolder = updatedFolderStructure;\n    locationArr.map(folderIndex => {\n        targetFolder = targetFolder.childFolders[parseInt(folderIndex)];\n    });\n    \n    const goToPrevPage = () => {\n        const {selectedLocation, setLocation} = props;\n        let locationArr = selectedLocation.split('$');\n        if(locationArr.length>1){\n            locationArr.splice(locationArr.length-1,1);\n            setLocation(locationArr.join('$'));\n        }\n    }\n    const createNewFolder = () => {\n        targetFolder.childFolders.push({\n            name: 'New Folder',\n            childFolders: []\n        });\n        setFolderStructure(updatedFolderStructure);\n    }\n    return(\n        <div className=\"navbar\">\n            <div className=\"row\">\n                <p style={{color:\"white\", paddingLeft:\"10px\"}}>Browser</p>\n                <BsFillCaretLeftFill className=\"backButton\" onClick={goToPrevPage}></BsFillCaretLeftFill>\n                <p style={{color:\"white\"}}>Back</p>\n                <BsFolderPlus size=\"30px\" className=\"folderIcon\" onClick={createNewFolder}></BsFolderPlus>\n                <BsSearch className=\"searchIcon\"></BsSearch>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar;","import React, { Component } from 'react';\nimport './App.css';\nimport Sidebar from './pages/sidebar';\nimport Mainbar from './pages/mainbar';\nimport { ImDropbox } from \"react-icons/im\";\nimport { BsStopwatch, BsDownload, BsMusicNoteBeamed } from \"react-icons/bs\";\nimport { GrAppleAppStore } from \"react-icons/gr\";\nimport { AiFillPicture} from \"react-icons/ai\";\nimport { BiCameraMovie } from \"react-icons/bi\";\nimport NavBar from './pages/navbar';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      folderStructure:{\n      childFolders:[\n        {\n          name: 'Air Drop',\n          icon: <ImDropbox />,\n          childFolders:[\n            {\n              name: 'folder1',\n              childFolders: [\n                {\n                  name: 'child folder1',\n                  childFolders: []\n                }\n              ]\n            },\n            {\n              name: 'folder2',\n              childFolders: []\n            }\n          ]\n        },\n        {\n          name: 'Recents',\n          icon: <BsStopwatch />,\n          childFolders:[]\n        },\n        {\n          name: 'Applications',\n          icon: <GrAppleAppStore />,\n          childFolders:[]\n        },\n        {\n          name: 'Downloads',\n          icon: <BsDownload />,\n          childFolders:[]\n        },\n        {\n          name: 'Picture',\n          icon: <AiFillPicture />,\n          childFolders:[]\n        },\n        {\n          name: 'Music',\n          icon: <BsMusicNoteBeamed />,\n          childFolders:[]\n        },\n        {\n          name: 'Movies',\n          icon: <BiCameraMovie />,\n          childFolders:[]\n        }\n      ]},\n      selectedLocation:'0'\n    }\n  }\n\n  setLocation = (location) => {\n    this.setState({\n      selectedLocation: location\n    });\n  }\n\n  setFolderStructure = (updatedFolderStructure) => {\n    this.setState({\n      folderStructure: updatedFolderStructure\n    })\n  }\n\n  render(){\n    const {folderStructure, selectedLocation} = this.state;\n    return(\n      <div className=\"container\">\n        <NavBar setLocation={(location)=>{this.setLocation(location)}} selectedLocation={selectedLocation} folderStructure={folderStructure} setFolderStructure={(folderStructure)=>{this.setFolderStructure(folderStructure)}}></NavBar>\n        <div className=\"row\">\n          <Sidebar selectedLocation={selectedLocation} folderStructure={folderStructure} setLocation={(location)=>{this.setLocation(location)}}/>\n          <Mainbar selectedLocation={selectedLocation} folderStructure={folderStructure} setFolderStructure={(folderStructure)=>{this.setFolderStructure(folderStructure)}} setLocation={(location)=>{this.setLocation(location)}}/>\n        </div>\n      </div>\n    )\n  }\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}